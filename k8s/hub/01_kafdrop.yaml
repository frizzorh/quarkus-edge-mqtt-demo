kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafdrop
  labels:
    app: kafdrop
    app.kubernetes.io/component: kafdrop
    app.kubernetes.io/instance: kafdrop
    app.kubernetes.io/name: kafdrop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafdrop
  template:
    metadata:
      labels:
        app: kafdrop
        deploymentconfig: kafdrop
    spec:
      containers:
        - name: kafdrop
          image: obsidiandynamics/kafdrop
          ports:
            - containerPort: 9000
              protocol: TCP
          env:
            - name: KAFKA_BROKERCONNECT
              value: >-
                ae60f20d9caed492987c84b17094761b-537900584.us-east-2.elb.amazonaws.com:9094
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: kafdrop
  labels:
    app: kafdrop
    app.kubernetes.io/component: kafdrop
    app.kubernetes.io/instance: kafdrop
    app.kubernetes.io/name: kafdrop
spec:
  ports:
    - name: 9000-tcp
      protocol: TCP
      port: 9000
      targetPort: 9000
  internalTrafficPolicy: Cluster
  type: ClusterIP
  selector:
    app: kafdrop
    deploymentconfig: kafdrop
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: kafdrop
  labels:
    app: kafdrop
    app.kubernetes.io/component: kafdrop
    app.kubernetes.io/instance: kafdrop
    app.kubernetes.io/name: kafdrop
spec:
  to:
    kind: Service
    name: kafdrop
    weight: 100
  port:
    targetPort: 9000-tcp
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
